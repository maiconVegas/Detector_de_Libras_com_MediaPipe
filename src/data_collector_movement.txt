import cv2
import csv
import os
from hand_detection import HandDetector

# Configuração inicial
detector = HandDetector()
cap = cv2.VideoCapture(0)

# Nome do arquivo para armazenar os dados
output_file = 'dataset/hand_movements.csv'

# Se o arquivo não existir, cria-o com o cabeçalho
if not os.path.exists(output_file):
    with open(output_file, 'w', newline='') as f:
        writer = csv.writer(f)
        # O cabeçalho será: ['label', 'frame_num', 'x1', 'y1', 'z1', 'x2', 'y2', 'z2', ..., 'x21', 'y21', 'z21']
        header = ['label', 'frame_num']
        for i in range(21):
            header += [f'x{i+1}', f'y{i+1}', f'z{i+1}']
        writer.writerow(header)

print("Iniciando coleta de dados de movimentos. Pressione a tecla correspondente para salvar a letra (A-Z) ou 'q' para sair.")

sequence_length = 10  # Número de frames para capturar por sequência
frames = []
label = None  # Para armazenar a letra correspondente

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        print("Erro na captura do vídeo")
        break

    # Espelha a imagem
    frame = cv2.flip(frame, 1)

    # Detecta as mãos
    frame, hand_landmarks = detector.detect_hands(frame)

    # Adiciona mensagem de depuração
    if hand_landmarks:
        print(f"Landmarks detectados: {hand_landmarks}")

        for hand_lms in hand_landmarks:
            landmarks = detector.extract_landmarks(hand_lms)
            if landmarks:
                frames.append(landmarks)
                print(f"Landmarks capturados: {landmarks}")

            # Verifica se o número de frames capturados é suficiente
            if len(frames) == sequence_length:
                if label is not None:
                    print(f"Capturando sequência de dados para a letra: {label}")

                    # Salvar a sequência no arquivo CSV
                    with open(output_file, 'a', newline='') as f:
                        writer = csv.writer(f)
                        for i, frame_landmarks in enumerate(frames):
                            row = [label, i] + [coord for landmark in frame_landmarks for coord in landmark]
                            writer.writerow(row)
                            print(f"Salvando linha: {row}")

                    # Limpar os frames para a próxima sequência
                    frames = []
                    label = None  # Limpar o rótulo até que uma nova letra seja escolhida
                else:
                    print("Nenhuma letra foi selecionada. Pressione uma tecla para escolher a letra.")

    # Mostra a imagem com as marcações
    cv2.imshow('Coleta de Dados de Movimentos em Libras', frame)

    # Captura a tecla pressionada
    key = cv2.waitKey(1) & 0xFF

    if key in range(ord('a'), ord('z') + 1):
        label = chr(key).upper()  # Converte para letra maiúscula
        print(f"Letra selecionada: {label}")

    if key == ord('q'):
        cap.release()
        cv2.destroyAllWindows()
        break
